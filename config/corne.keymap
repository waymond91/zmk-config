#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define NUMBERS 3

/ {
    macros {
        macro_copy: macro_copy {
            compatible = "zmk,behavior-macro";
            label = "macro_copy";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        macro_paste: macro_paste {
            compatible = "zmk,behavior-macro";
            label = "macro_paste";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        macro_cut: macro_cut {
            compatible = "zmk,behavior-macro";
            label = "macro_cut";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        macro_all: macro_all {
            compatible = "zmk,behavior-macro";
            label = "macro_all";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        macro_shake: macro_shake {
            compatible = "zmk,behavior-macro";
            label = "macro_shake";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LEFT_GUI &kp LEFT_CONTROL>,
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp M>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        macro_undo: macro_undo {
            compatible = "zmk,behavior-macro";
            label = "macro_undo";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        macro_redo: macro_redo {
            compatible = "zmk,behavior-macro";
            label = "macro_redo";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT_SHIFT>,
                <&macro_press>,
                <&kp Z>,
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT_SHIFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base_layer {
            bindings = <
          &kp TAB   &kp Q   &kp W   &kp E      &kp R         &kp T      &kp Y   &kp U   &kp I   &kp O          &kp P    &none
 &kp LEFT_CONTROL   &kp A   &kp S   &kp D      &kp F         &kp G      &kp H   &kp J   &kp K   &kp L  &kp BACKSPACE    &none
   &kp LEFT_SHIFT   &kp Z   &kp X   &kp C      &kp V         &kp B      &kp N   &kp M   &none   &none        &kp ESC  &kp ESC
                                    &mo 3  &kp SPACE  &kp LEFT_GUI  &kp ENTER   &mo 1   &mo 2
            >;
        };

        Lower_layer {
            bindings = <
          &kp TAB      &kp RIGHT_BRACKET  &kp GREATER_THAN   &kp LESS_THAN      &kp LEFT_BRACKET      &kp PLUS  &kp MINUS      &kp SEMICOLON         &kp COLON         &none          &none   &none
 &kp LEFT_CONTROL  &kp RIGHT_PARENTHESIS   &kp RIGHT_BRACE  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS     &kp EQUAL   &kp EXCL         &kp PERIOD         &kp COMMA  &kp QUESTION  &kp BACKSPACE   &none
   &kp LEFT_SHIFT          &kp AMPERSAND          &kp PIPE  &kp UNDERSCORE      &kp SINGLE_QUOTE  &kp ASTERISK  &kp SLASH  &kp DOUBLE_QUOTES            &kp AT      &kp HASH        &kp ESC   &none
                                                                     &to 3             &kp SPACE         &none  &kp ENTER              &none  &kp LEFT_COMMAND
            >;
        };

        Raise_layer {
            bindings = <
          &kp TAB  &kp EXCLAMATION   &kp AT_SIGN      &kp HASH    &kp DOLLAR   &kp PERCENT     &kp CARET  &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &none
 &kp LEFT_CONTROL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &kp NUMBER_7      &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0    &none
   &kp LEFT_SHIFT            &none         &none         &none         &none         &none      &kp HOME        &kp END             &none                 &none             &kp ESCAPE  &kp ESC
                                                         &to 3     &kp SPACE         &none     &kp ENTER          &none  &kp LEFT_COMMAND
            >;
        };

        Numbers_layer {
            bindings = <
          &kp TAB       &none  &macro_redo  &macro_undo  &macro_shake             &none      &none           &none    &kp UP_ARROW            &none          &none   &none
 &kp LEFT_CONTROL  &macro_all   &macro_cut  &macro_copy  &macro_paste             &none      &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp BACKSPACE   &none
   &kp LEFT_SHIFT       &none        &none        &none         &none             &none      &none        &kp HOME           &none          &kp END        &kp ESC   &none
                                                  &none         &none  &kp LEFT_COMMAND  &kp ENTER           &none           &none
            >;
        };
    };
};
